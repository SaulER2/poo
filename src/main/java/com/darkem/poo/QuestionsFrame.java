/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.darkem.poo;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.*;

/**
 *
 * @author emmanuel
 */
public class QuestionsFrame extends javax.swing.JFrame {
    private int questions = 0;
    ArrayList<JPanel> components = new ArrayList<JPanel>();

    /**
     * Creates new form QuestionsFrame
     */
    public QuestionsFrame(Question mainQuestion) {
        initComponents();
        mainQuestion.getQuestion(this);
        this.setVisible(true);
    }
    
    public void addQuestionPanel(Question question) {
        final int questions = this.questions;
        JPanel questionPanel = new JPanel();
        //questionPanel.setLayout(new GridLayout(2, 1));
        JLabel questionLabel = new JLabel(question.question);
        DefaultComboBoxModel<String> optionsModel = new DefaultComboBoxModel<>(question.options);
        JComboBox<String> questionSelect = new JComboBox<>(optionsModel);
        questionSelect.setSelectedItem(null);
        
        
        questionPanel.add(questionLabel);
        questionPanel.add(questionSelect);
        
        this.components.add(questionPanel);
        components = this.components;
        
        this.setLayout(new GridLayout(1, this.questions));
        this.add(questionPanel);
        this.revalidate();
        this.repaint();
        
        JFrame frame = this;
        
        questionSelect.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    int selectedIndex = questionSelect.getSelectedIndex();
                    
                    int i = 0;
                    Iterator<JPanel> iter = components.iterator();
                    while (iter.hasNext()) {
                        JPanel panel = iter.next();
                        if (i > questions) {
                            frame.remove(panel);
                            iter.remove();
                        }
                        i++;
                    }
                    question.getAnswer(selectedIndex);
                    frame.revalidate();
                    frame.repaint();

                }
            }
        });
        
        this.questions++;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
